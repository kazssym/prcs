#! /bin/sh -e
## 50_prcs-contrib.dpatch by  <rafael@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: New patch generated from prcs 1.3.3-1 diff.gz

if [ $# -lt 1 ]; then
    echo "`basename $0`: script expects -patch|-unpatch as argument" >&2
    exit 1
fi

[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
patch_opts="${patch_opts:--f --no-backup-if-mismatch} ${2:+-d $2}"

case "$1" in
    -patch) patch -p1 ${patch_opts} < $0;;
    -unpatch) patch -R -p1 ${patch_opts} < $0;;
    *)
        echo "`basename $0`: script expects -patch|-unpatch as argument" >&2
        exit 1;;
esac

exit 0

@DPATCH@

--- prcs-1.3.3.orig/contrib/visualtree/prcs-visualtree.1
+++ prcs-1.3.3/contrib/visualtree/prcs-visualtree.1
@@ -12,7 +12,7 @@
 .\" First parameter, NAME, should be all caps
 .\" Second parameter, SECTION, should be 1-8, maybe w/ subsection
 .\" other parameters are allowed: see man(7), man(1)
-.TH PRCS-VISUALTREE SECTION "2001-10-28"
+.TH PRCS-VISUALTREE 1 "2001-10-28"
 .\" Please adjust this date whenever revising the manpage.
 .\"
 .\" Some roff macros, for reference:
@@ -31,11 +31,16 @@
 .SH SYNOPSIS
 .B prcs info -l
 .RI [ project ]
-.B | prcs_tree_info | xvcg
+.B | prcs_tree_info | xvcg -
 .br
 .B prcs_tree_draw
 .RI " project"
 .br
+.B prcs-show-tree
+.RI [[-r <rev-pattern>] ...]
+.RI [-ps <filename>]
+.RI [args]
+.br
 .SH DESCRIPTION
 This manual page documents briefly the
 .B prcs-visualtree
@@ -69,10 +74,28 @@
 \fBprcs_tree_draw\fP is a quick and dirty shell script which takes a
 project name, optional start and end version numbers, extracts the prcs
 info -l data, runs prcs_tree and calls xvcg on the result.
+.PP
+The \fBprcs-show-tree\fP is a more elaborated script that just runs
+prcs_tree_info as shown above, avoiding the cumbersome command-line which is
+quite annoying to enter.
+.PP
+Without leading -r options, it graphs the full project.  With -r options, it
+only graphs the branches whose names match the given patterns.
+.PP
+Use the -ps option to output the graph directly to an Encapsulated
+PostScript file, instead of calling xvcg to display the revision tree.
+.PP
+"args" are additional args to pass to "prcs -l" if needed. Typically this
+can be a project name.  "-r" options should not be specified there.
 .SH SEE ALSO
 .BR prcs (1),
 .BR xvcg (1).
 .br
 .SH AUTHOR
+.PP
+Keith Owens <kaos@ocs.com.au> wrote the prcs_tree* scripts.
+.PP
+Yann Dirson <dirson@debian.org> contributed the prcs-show-tree script.
+.PP
 This manual page was written by Rafael Laboissiere <rafael@debian.org>,
 for the Debian GNU/Linux system (but may be used by others).
--- prcs-1.3.3.orig/contrib/visualtree/prcs_tree_draw
+++ prcs-1.3.3/contrib/visualtree/prcs_tree_draw
@@ -10,14 +10,18 @@
 #       Modified by Rafael Laboissiere <rafael@laboissiere.net>
 #       Fixed paths for ./prcs_tree_info and xvcg.
 #       Sat May 11 18:42:34 CEST 2002
+#
+#	Fixes contributed by Yann Dirson <dirson@debian.org> to support
+#	branch names containing dots.
+#	Thu Jun 13 10:04:38 CEST 2002
 
 project=${1:?"Project is required"}
 prcs info $project > /tmp/$$a
-start=${2:-`sed -ne '1{ s/[^ ]* //; s/\..*//; p; }' /tmp/$$a`}
-end=${3:-`sed -ne '${ s/[^ ]* //; s/\..*//; p; }' /tmp/$$a`}
-range=`sed -ne "/^[^ ]* $start\./,/^[^ ]* $end\./{ s/^[^ ]* //; s/\..*//; p; }" /tmp/$$a | sort -nu`
+start=${2:-`sed -ne '1{ s/[^ ]* //; s/\.[^.]* .*//; p; }' /tmp/$$a`}
+end=${3:-`sed -ne '${ s/[^ ]* //; s/\.[^.]* .*//; p; }' /tmp/$$a`}
+range=`sed -ne "/^[^ ]* $start\./,/^[^ ]* $end\./{ s/^[^ ]* //; s/\.[^.]* .*//; p; }" /tmp/$$a | sort -nu`
 echo prcs info on $project for range $range starting at $start, ending at $end
 rm /tmp/$$a
-for i in $range ; do prcs info -l -r $i $project ; echo ; done | ./prcs_tree_info > /tmp/$$a
+for i in $range ; do prcs info -l -r $i.@ $project ; echo ; done | prcs_tree_info > /tmp/$$a
 xvcg /tmp/$$a
 rm /tmp/$$a
--- prcs-1.3.3.orig/contrib/visualtree/prcs_tree_info.pl
+++ prcs-1.3.3/contrib/visualtree/prcs_tree_info.pl
@@ -162,8 +162,8 @@
   }
   else {
     # Local version branches are black, merge branches are blue
-    ($fv = $from) =~ s/\..*//;
-    ($tv = $to) =~ s/\..*//;
+    ($fv = $from) =~ s/(.*)\..*/$1/;
+    ($tv = $to) =~ s/(.*)\..*/$1/;
     if ($fv eq $tv) {
       printf " color: black";
     }
--- prcs-1.3.3.orig/contrib/visualtree/prcs-show-tree
+++ prcs-1.3.3/contrib/visualtree/prcs-show-tree
@@ -0,0 +1,50 @@
+#!/bin/sh
+set -e
+
+branches=
+XVCGFLAGS=
+while [ $# -gt 0 ]
+do
+    case "$1" in
+    -r)
+	branches="$branches $2"
+	shift
+	;;
+    -ps)
+        XVCGFLAGS="-color -psoutput $2"
+        rm -f "$2"
+        shift
+        ;;
+    -*)
+	echo >&2 "unkown option $1"
+	exit 1
+	;;
+    *)
+	break
+	;;
+    esac
+    shift
+done
+
+
+(
+    if [ -z "$branches" ]
+    then
+	if [ $# = 0 ]
+	then
+	    prcs info -l
+	else
+	    prcs info -l "$@"
+	fi
+    else
+	for b in $branches
+	do
+	    if [ $# = 0 ]
+	    then
+		prcs info -l --plain-format -r $b
+	    else
+		prcs info -l --plain-format -r $b "$@"
+	    fi
+	done
+    fi
+) | prcs_tree_info | xvcg ${XVCGFLAGS} -
--- prcs-1.3.3.orig/contrib/visualtree/prcs-show-tree.1
+++ prcs-1.3.3/contrib/visualtree/prcs-show-tree.1
@@ -0,0 +1 @@
+.so man1/prcs-visualtree.1
